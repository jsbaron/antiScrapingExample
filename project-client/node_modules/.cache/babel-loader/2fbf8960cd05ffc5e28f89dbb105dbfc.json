{"ast":null,"code":"import axios from \"axios\";\nimport { USERS_ENFORCED } from \"../redux/stateConstants\";\nconst BASE_URL = \"http://ec2-54-237-51-236.compute-1.amazonaws.com:8080/project_archive\"; // const BASE_URL = \"http://localhost:8080/project_archive\";\n\nconst handleEnforcement = e => {\n  if (e.response && e.response.status === 429) {\n    return USERS_ENFORCED.users;\n  } else {\n    throw new Error(e);\n  }\n};\n\nconst API = {\n  getUsersByPage: async page => {\n    try {\n      const users = await axios.get(BASE_URL + `/users/page/${page}`);\n      return users.data;\n    } catch (e) {\n      return handleEnforcement(e);\n    }\n  },\n  writeHoneyPot: async () => {\n    await axios.post(BASE_URL + '/honeypot/');\n  }\n};\nexport default API;","map":{"version":3,"sources":["/Users/joshuabaron/Documents/NEU/cs6760/project-parent/project-client/src/utils/API.js"],"names":["axios","USERS_ENFORCED","BASE_URL","handleEnforcement","e","response","status","users","Error","API","getUsersByPage","page","get","data","writeHoneyPot","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AAEA,MAAMC,QAAQ,GAAG,uEAAjB,C,CACA;;AAEA,MAAMC,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,MAAIA,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACC,QAAF,CAAWC,MAAX,KAAsB,GAAxC,EAA6C;AACzC,WAAOL,cAAc,CAACM,KAAtB;AACH,GAFD,MAEO;AACH,UAAM,IAAIC,KAAJ,CAAUJ,CAAV,CAAN;AACH;AACJ,CAND;;AAQA,MAAMK,GAAG,GAAI;AACTC,EAAAA,cAAc,EAAE,MAAMC,IAAN,IAAc;AAC1B,QAAI;AACA,YAAMJ,KAAK,GAAG,MAAMP,KAAK,CAACY,GAAN,CAChBV,QAAQ,GAAI,eAAcS,IAAK,EADf,CAApB;AAEA,aAAOJ,KAAK,CAACM,IAAb;AACH,KAJD,CAIE,OAAOT,CAAP,EAAU;AACR,aAAOD,iBAAiB,CAACC,CAAD,CAAxB;AACH;AACJ,GATQ;AAUTU,EAAAA,aAAa,EAAE,YAAY;AACvB,UAAMd,KAAK,CAACe,IAAN,CACFb,QAAQ,GAAG,YADT,CAAN;AAEH;AAbQ,CAAb;AAeA,eAAeO,GAAf","sourcesContent":["import axios from \"axios\";\nimport {USERS_ENFORCED} from \"../redux/stateConstants\";\n\nconst BASE_URL = \"http://ec2-54-237-51-236.compute-1.amazonaws.com:8080/project_archive\"\n// const BASE_URL = \"http://localhost:8080/project_archive\";\n\nconst handleEnforcement = e => {\n    if (e.response && e.response.status === 429) {\n        return USERS_ENFORCED.users;\n    } else {\n        throw new Error(e);\n    }\n}\n\nconst API =  {\n    getUsersByPage: async page => {\n        try {\n            const users = await axios.get(\n                BASE_URL + `/users/page/${page}`);\n            return users.data;\n        } catch (e) {\n            return handleEnforcement(e)\n        }\n    },\n    writeHoneyPot: async () => {\n        await axios.post(\n            BASE_URL + '/honeypot/');\n    }\n}\nexport default API;"]},"metadata":{},"sourceType":"module"}