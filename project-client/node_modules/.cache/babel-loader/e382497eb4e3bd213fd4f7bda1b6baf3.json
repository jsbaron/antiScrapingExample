{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joshuabaron/Documents/NEU/cs6760/project-parent/project-client/src/components/Timeline.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentUser, setUsers } from \"../redux/actions\";\nimport API from \"../utils/API\";\nimport { Button, Card, ListGroup, Alert } from \"react-bootstrap\";\nimport PageNav from \"./PageNav\";\nimport { USERS_ENFORCED } from \"../redux/stateConstants\";\n\nconst Timeline = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const page = useSelector(state => state.page.page);\n  const users = useSelector(state => state.users.users);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      dispatch(setUsers(await API.getUsersByPage(page)));\n    };\n\n    fetchUsers();\n  }, [dispatch, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users === USERS_ENFORCED.users ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      className: \"ml-auto mr-auto mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You're making too many requests!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"mx-auto w-75 mt-5 mb-3\",\n        children: users.map((user, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              border: \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: () => {\n                  dispatch(setCurrentUser(user));\n                },\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"mt-0 pt-0\",\n              children: user.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-muted\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: new Date(user.tweetCreated).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-auto\",\n                  children: user.tweetLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          display: \"none\"\n        },\n        onClick: async () => {\n          await API.writeHoneyPot();\n        },\n        children: \"I'm a trap.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(PageNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Timeline, \"k8HBm/mMUyywEXrLXifkB2UuzlE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Timeline;\nexport default Timeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"sources":["/Users/joshuabaron/Documents/NEU/cs6760/project-parent/project-client/src/components/Timeline.jsx"],"names":["React","useEffect","useDispatch","useSelector","setCurrentUser","setUsers","API","Button","Card","ListGroup","Alert","PageNav","USERS_ENFORCED","Timeline","dispatch","page","state","users","fetchUsers","getUsersByPage","map","user","i","border","name","text","Date","tweetCreated","toLocaleString","tweetLocation","display","writeHoneyPot"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setCurrentUser, setUsers} from \"../redux/actions\";\nimport API from \"../utils/API\";\nimport {Button, Card, ListGroup, Alert} from \"react-bootstrap\";\nimport PageNav from \"./PageNav\";\nimport {USERS_ENFORCED} from \"../redux/stateConstants\";\n\nconst Timeline = () => {\n    const dispatch = useDispatch();\n\n    const page = useSelector(state => state.page.page);\n\n    const users = useSelector(state => state.users.users);\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            dispatch(setUsers(await API.getUsersByPage(page)));\n        }\n        fetchUsers();\n    }, [dispatch, page]);\n\n    return (\n        <>\n            {\n                users === USERS_ENFORCED.users ?\n                    <Alert variant={\"danger\"} className={\"ml-auto mr-auto mt-5\"}>\n                        <h3>You're making too many requests!</h3>\n                    </Alert>\n                    :\n                    <>\n                        <ListGroup className={\"mx-auto w-75 mt-5 mb-3\"}>\n                            {\n                                users.map((user, i) => (\n                                    <ListGroup.Item key={i}>\n                                        <Card style={{border: \"none\"}}>\n                                            <Card.Title>\n                                                <Button\n                                                    variant={\"link\"}\n                                                    onClick={() => {\n                                                        dispatch(setCurrentUser(user));\n                                                    }}\n                                                >\n                                                    {user.name}\n                                                </Button>\n                                            </Card.Title>\n                                            <Card.Body className={\"mt-0 pt-0\"}>{user.text}</Card.Body>\n                                            <Card.Footer className=\"text-muted\">\n                                                <div className={\"d-flex flex-row\"}>\n                                                    <div>{new Date(user.tweetCreated).toLocaleString()}</div>\n                                                    <div className={\"ml-auto\"}>\n                                                        {user.tweetLocation}\n                                                    </div>\n                                                </div>\n                                            </Card.Footer>\n                                        </Card>\n                                    </ListGroup.Item>\n                                ))\n                            }\n                        </ListGroup>\n                        <button\n                            style={{display: \"none\"}}\n                            onClick={async () => {\n                                await API.writeHoneyPot()\n                            }}\n                        >\n                            I'm a trap.\n                        </button>\n                        <PageNav/>\n                    </>\n            }\n\n        </>\n    )\n};\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}